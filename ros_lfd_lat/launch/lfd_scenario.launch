<?xml version="1.0"?>
<launch>
  <!-- load katana urdf -->
  <!--<include file="$(find katana_description)/launch/upload_$(env KATANA_TYPE).launch" />-->
  <include file="$(find kate_world)/launch/upload_kate.launch" />

  <!-- which joints does this katana instance control? (for teleop etc.) -->
  <rosparam command="load" file="$(find katana)/config/katana_arm_controllers.yaml" />

  <!-- remap katana_gripper_grasp_controller topic names; this has to be stated before loading Gazebo! -->
  <remap from="posture_action_name" to="/gripper_grasp_posture_controller" />
  <remap from="grasp_query_name" to="/gripper_grasp_status" />

  <!-- load world -->
  <!-- start up empty world -->
  <include file="$(find gazebo_worlds)/launch/empty_world_throttled.launch"/>
  
  <!-- spawn table and tabletop object-->
  <param name="table_description" 
   command="$(find xacro)/xacro.py '$(find gazebo_worlds)/objects/table.urdf.xacro'" />
  <node name="spawn_table" pkg="gazebo" type="spawn_model" args="-urdf -param table_description -model table_1 -x -0.2 -z 0.0" 
   respawn="false" output="screen" />

  <node name="spawn_coke_can" pkg="gazebo" type="spawn_model" 
   args="-urdf -file $(find katana_arm_gazebo)/urdf/coke_can.urdf -model COCA-COLA-CAN-250ML -wait 'table_1' -x 0.5 -y -0.2 -z 0.66" 
   respawn="false" output="screen" />
   
  <node name="spawn_ikea_cup" pkg="gazebo" type="spawn_model"
   args="-urdf -file $(find ros_lfd_lat)/urdf/ikea_cup.urdf -model IKEA-CUP-SOLBRAEND-BLUE -wait 'table_1' -x 0.5 -y 0.3 -z 0.60" 
   respawn="false" output="screen" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_katana_model" pkg="gazebo" type="spawn_model" args="$(optenv ROBOT_INITIAL_POSE) -z 0.01 -urdf -param robot_description -model kate" respawn="false" output="screen"/>

  <!-- Default Controllers -->
  <rosparam command="load" file="$(find katana_arm_gazebo)/config/katana_arm_controller.yaml" />
  <rosparam command="load" file="$(find katana_arm_gazebo)/config/katana_gripper_controller.yaml" />

  <!-- Controller manager parameters -->
  <param name="pr2_controller_manager/mechanism_statistics_publish_rate" value="1.0" />
  <param name="pr2_controller_manager/joint_state_publish_rate" value="100.0" />

  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" type="string" value="" />
  </node>

  <!-- Controllers that come up loaded -->
  <node name="default_loaded_controllers_spawner"
    pkg="pr2_controller_manager" type="spawner" output="screen"
    args="--wait-for=/calibrated katana_arm_controller" />

  <!-- Fake calibration -->
  <node pkg="rostopic" type="rostopic" name="fake_joint_calibration"
    args="pub /calibrated std_msgs/Bool true" />



  <group ns="katana_arm_controller">
    <node pkg="katana_joint_movement_adapter" type="joint_movement_adapter" name="joint_movement_adapter" output="screen">
      <param name="max_acc" value="1.190799" />
      <param name="max_vel" value="2.646220" />
    </node>
  </group>
  
  <!-- Object recognition -->
  <include file="$(find gazebo_object_recognition_server)/server.launch" />
</launch>

